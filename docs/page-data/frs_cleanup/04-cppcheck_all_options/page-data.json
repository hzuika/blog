{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/frs_cleanup/04-cppcheck_all_options",
    "result": {"data":{"site":{"siteMetadata":{"title":"blog | hzuika","docsLocation":"https://github.com/hzuika/blog/tree/master/content"}},"mdx":{"fields":{"id":"27ecbf64-088d-52b3-9c24-91edddab2909","title":"cppcheckの全オプションを有効にして確認する","slug":"/frs_cleanup/04-cppcheck_all_options"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"cppcheckの全オプションを有効にして確認する\",\n  \"metaTitle\": \"Freestyle Cleanup 04\",\n  \"metaDescription\": \"cppcheck --enable=all\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"cppcheck\\u306E\\u5168\\u3066\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u6709\\u52B9\\u306B\\u3057\\u3066\\u5B9F\\u884C\\u3059\\u308B\\u306B\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--enable=all\"), \"\\u3092\\u52A0\\u3048\\u307E\\u3059\\uFF0E\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-q\"), \"\\u306F\\u9032\\u884C\\u72B6\\u6CC1\\u3092\\u51FA\\u529B\\u3057\\u307E\\u305B\\u3093\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"cppcheck --enable=all -q .\\\\source\\\\blender\\\\freestyle\\\\ 2> ..\\\\frs_check_20220327.txt\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gist.github.com/hzuika/b9f2f33b11eed6fcb289e02e5a764f9e\"\n  }, \"\\u51FA\\u529B\\u7D50\\u679C\")), mdx(\"p\", null, \"\\u672A\\u4F7F\\u7528\\u306E\\u5909\\u6570\\u3092\\u51E6\\u7406\\u3057\\u3066\\u304A\\u304D\\u307E\\u3059\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"source\\\\blender\\\\freestyle\\\\intern\\\\view_map\\\\ViewMapBuilder.cpp:932:24: style: Unused variable: newVVertices [unusedVariable]\\nsource\\\\blender\\\\freestyle\\\\intern\\\\view_map\\\\ViewMapBuilder.cpp:1588:16: style: Unused variable: occluders [unusedVariable]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gist.github.com/hzuika/1aa08ca3306e03dd8ed6428fca65235b\"\n  }, \"master\\u30D6\\u30E9\\u30F3\\u30C1\\u3068\\u306Ediff\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gist.github.com/hzuika/5728871679f8e4c6a7df36ed5f711c09\"\n  }, \"\\u76F4\\u524D\\u306E\\u5909\\u66F4\\u3068\\u306Ediff\"))), mdx(\"p\", null, \"\\u305D\\u306E\\u4ED6\\u306E\\u51FA\\u529B\\u7D50\\u679C\\u306F\\u6B21\\u306E\\u901A\\u308A\\u3067\\u3059\\uFF0E\"), mdx(\"h2\", null, \"Error\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"missingReturn (void\\u3067\\u306F\\u306A\\u3044\\u623B\\u308A\\u5024\\u306E\\u95A2\\u6570\\u306B\\uFF0Creturn\\u6587\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"error: Found a exit path from function with non-void return type that has missing return statement \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Py_RETURN_NONE;\"), \"\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u3044\\u308B\\u305F\\u3081\\uFF0C\\u3053\\u306E\\u30A8\\u30E9\\u30FC\\u304C\\u51FA\\u3066\\u3044\\u307E\\u3059\\uFF0E\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\python\\\\BPy_ContextFunctions.cpp:227\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"static PyObject *ContextFunctions_get_selected_fedge(PyObject * /*self*/)\\n{\\nFEdge *fe = ContextFunctions::GetSelectedFEdgeCF();\\nif (fe) {\\n    return Any_BPy_FEdge_from_FEdge(*fe);\\n}\\nPy_RETURN_NONE;\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"unknownMacro (\\u77E5\\u3089\\u306A\\u3044\\u30DE\\u30AF\\u30ED\\u304C\\u3042\\u308A\\u307E\\u3059\\uFF0E(\\u30B5\\u30D6\\u30C7\\u30A3\\u30C6\\u30AF\\u30C8\\u30EA\\u4E0B\\u3067cppcheck\\u3092\\u4F7F\\u7528\\u3057\\u305F\\u305F\\u3081\\u3053\\u306E\\u30A8\\u30E9\\u30FC\\u304C\\u51FA\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"error: There is an unknown macro here somewhere. Configuration is required. If Py_LOCAL_INLINE is a macro then please configure it. \")))), mdx(\"h2\", null, \"Warning\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"assertWithSideEffect (Assert\\u6587\\u304C\\u526F\\u4F5C\\u7528\\u3092\\u6301\\u3064\\u304B\\u3082\\u3057\\u308C\\u306A\\u3044\\u95A2\\u6570\\u3092\\u547C\\u3073\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"warning: Assert statement calls a function which may have desired side effects: 'GetOwner'. \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\winged_edge\\\\Curvature.cpp:89:19: \"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"        assert(h->GetOwner()->GetNumberOfOEdges() ==\\n            2);  // Because otherwise v->isBoundary() would be true\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"identicalConditionAfterEarlyExit (\\u540C\\u3058\\u6761\\u4EF6\\u304C\\u3042\\u308A\\uFF0C\\u4E8C\\u3064\\u76EE\\u306E\\u6761\\u4EF6\\u306F\\u5E38\\u306Bfalse\\u3067\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"warning: Identical condition 'pred_ts.result', second condition is always false \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4E8C\\u756A\\u76EE\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pred_ts.result\"), \"\\u306B\\u884C\\u304F\\u305F\\u3081\\u306B\\u306F\\uFF0C\\u4E00\\u756A\\u76EE\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pred_ts.result\"), \"\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \"\\u3067\\u306A\\u3051\\u308C\\u3070\\u306A\\u3089\\u306A\\u3044\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3059\\uFF0E\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\stroke\\\\Operators.cpp:186\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"    if (pred(**it_edge) < 0) {\\n    goto error;\\n    }\\n    if (pred.result) {\\n    continue;\\n    }\\n    if (pred_ts(**it_edge) < 0) {\\n    goto error;\\n    }\\n    if (pred_ts.result) {\\n    continue;\\n    }\\n\\n    edge = dynamic_cast<ViewEdge *>(*it_edge);\\n    it.setBegin(edge);\\n    it.setCurrentEdge(edge);\\n\\n    Chain *new_chain = new Chain(id);\\n    ++id;\\n    while (true) {\\n    new_chain->push_viewedge_back(*it, it.getOrientation());\\n    ts(**it);\\n    ++it;\\n    if (it.isEnd()) {\\n        break;\\n    }\\n    if (pred(**it) < 0) {\\n        delete new_chain;\\n        goto error;\\n    }\\n    if (pred.result) {\\n        break;\\n    }\\n    if (pred_ts(**it) < 0) {\\n        delete new_chain;\\n        goto error;\\n    }\\n    if (pred_ts.result) {\\n        break;\\n    }\\n    }\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"noCopyConstructor (\\u52D5\\u7684\\u5272\\u308A\\u5F53\\u3066\\u304C\\u3042\\u308B\\u305F\\u3081\\u30B3\\u30D4\\u30FC\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u306E\\u5B9F\\u88C5\\u3092\\u63A8\\u5968\\u3057\\u307E\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"warning: Class does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"nullPointerRedundantCheck (\\u6761\\u4EF6\\u304C\\u5197\\u9577\\u304B\\uFF0Cnull\\u30DD\\u30A4\\u30F3\\u30BF\\u306E\\u30C7\\u30EA\\u30D5\\u30A1\\u30EC\\u30F3\\u30B9\\u306E\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"warning: Either the condition '!ss' is redundant or there is possible null pointer dereference: ss. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Py_RETURN_NONE\"), \"\\u304C\\u3084\\u306F\\u308A\\u7121\\u8996\\u3055\\u308C\\u307E\\u3059\\uFF0E\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__A\"), \"\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nullptr\"), \"\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BLI_assert\"), \"\\u3067\\u884C\\u3063\\u3066\\u3044\\u307E\\u3059\\u304C\\uFF0Ccppcheck\\u306B\\u306F\\u5F15\\u3063\\u304B\\u304B\\u3063\\u3066\\u3044\\u307E\\u305B\\u3093\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\python\\\\BPy_ViewShape.cpp:172\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"static PyObject *ViewShape_sshape_get(BPy_ViewShape *self, void *UNUSED(closure))\\n{\\nSShape *ss = self->vs->sshape();\\nif (!ss) {\\n    Py_RETURN_NONE;\\n}\\nreturn BPy_SShape_from_SShape(*ss);\\n}\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\stroke\\\\Curve.cpp:154\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"BLI_assert(__A != nullptr && __B != nullptr);\\n\\n_Point2d = iA->point2d() + t3 * (iB->point2d() - iA->point2d());\\n_Point3d = __A->point3d() + _t2d * (__B->point3d() - __A->point3d());\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"operatorEqToSelf (=\\u6F14\\u7B97\\u5B50\\u3067\\u52D5\\u7684\\u30E1\\u30E2\\u30EA\\u306E\\u81EA\\u5DF1\\u5272\\u308A\\u5F53\\u3066\\u554F\\u984C\\u3092\\u56DE\\u907F\\u3059\\u308B\\u305F\\u3081\\u306E\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u5165\\u308C\\u3066\\u304F\\u3060\\u3055\\u3044)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\view_map\\\\Interface0D.h:194\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Interface0DIterator &operator=(const Interface0DIterator &it)\\n{\\n    if (_iterator) {\\n    delete _iterator;\\n    }\\n    _iterator = it._iterator->copy();\\n    return *this;\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"operatorEqVarError (\\u4EE3\\u5165\\u6F14\\u7B97\\u5B50\\u5185\\u3067\\u30E1\\u30F3\\u30D0\\u5909\\u6570\\u306B\\u5024\\u304C\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"warning: Member variable 'Stroke::_textureStep' is not assigned a value in 'Stroke::operator='. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"uninitMemberVar (\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u3067\\u521D\\u671F\\u5316\\u3055\\u308C\\u306A\\u3044\\u30E1\\u30F3\\u30D0\\u5909\\u6570\\u304C\\u3042\\u308A\\u307E\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"warning: Member variable is not initialized in the constructor. \")))), mdx(\"h2\", null, \"Style\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"constParameter (\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u3092\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"const\"), \"\\u3067\\u5BA3\\u8A00\\u3067\\u304D\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Parameter can be declared with const \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"cstyleCast (C\\u8A00\\u8A9E\\u5F62\\u5F0F\\u306E\\u30DD\\u30A4\\u30F3\\u30BF\\u30AD\\u30E3\\u30B9\\u30C8\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u3044\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"style: C-style pointer casting \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\view_map\\\\Silhouette.h:1352\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"        newfedgelist.push_back((FEdge *)current->userdata);\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"knownConditionTrueFalse (\\u5E38\\u306Bfalse\\u306E\\u6761\\u4EF6\\u304C\\u3042\\u308A\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Condition '1==i' is always false \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"missingOverride (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"override\"), \"\\u6307\\u5B9A\\u5B50\\u304C\\u30DE\\u30FC\\u30AF\\u3055\\u308C\\u3066\\u3044\\u306A\\u3044\\u57FA\\u5E95\\u30AF\\u30E9\\u30B9\\u306E\\u95A2\\u6570\\u3092\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u3057\\u3066\\u3044\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: The function overrides a function in a base class but is not marked with a 'override' specifier. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cpprefjp.github.io/lang/cpp11/override_final.html\"\n  }, \"\\u3053\\u3061\\u3089\\u306E\\u30EA\\u30D5\\u30A1\\u30EC\\u30F3\\u30B9\"), \"\\u3092\\u53C2\\u8003\\u306B\\u3059\\u308B\\u3068\\uFF0C\\u57FA\\u5E95\\u30AF\\u30E9\\u30B9\\u306E\\u4EEE\\u60F3\\u95A2\\u6570\\u3092\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u3059\\u308B\\u3068\\u304D\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"override\"), \"\\u3057\\u3066\\u304A\\u304F\\u3068\\uFF0C\\u9593\\u9055\\u3048\\u3066\\u3044\\u305F\\u3089\\u6587\\u6CD5\\u30A8\\u30E9\\u30FC\\u306B\\u3057\\u3066\\u304F\\u308C\\u308B\\u305D\\u3046\\u3067\\u3059\\uFF0E\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"noConstructor (\\u521D\\u671F\\u5316\\u304C\\u5FC5\\u8981\\u306A\\u30D7\\u30E9\\u30A4\\u30D9\\u30FC\\u30C8\\u30E1\\u30F3\\u30D0\\u5909\\u6570\\u304C\\u3042\\u308A\\u307E\\u3059\\u304C\\uFF0C\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u3092\\u5BA3\\u8A00\\u3057\\u3066\\u3044\\u307E\\u305B\\u3093\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: The class does not declare a constructor although it has private member variables which likely require initialization. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"noExplicitConstructor (\\u660E\\u793A\\u7684\\u3067\\u306F\\u306A\\u30441\\u5F15\\u6570\\u3092\\u6301\\u3064\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u304C\\u3042\\u308A\\u307E\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Class has a constructor with 1 argument that is not explicit. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.bohyoh.com/CandCPP/FAQ/FAQ00136.html\"\n  }, \"\\u3053\\u3061\\u3089\\u306E\\u8A18\\u4E8B\"), \"\\u3092\\u53C2\\u8003\\u306B\\u3059\\u308B\\u3068\\uFF0C\\u5F15\\u6570\\u304C1\\u500B\\u306E\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u304C\\uFF0C\\u578B\\u306E\\u6697\\u9ED9\\u7684\\u306A\\u5909\\u63DB\\u3092\\u884C\\u308F\\u306A\\u3044\\u3088\\u3046\\u306B\\u3059\\u308B\\u306B\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"explicit\"), \"\\u306E\\u30D7\\u30EC\\u30D5\\u30A3\\u30C3\\u30AF\\u30B9\\u3092\\u3064\\u3051\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\uFF0E\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"redundantAssignment (\\u53E4\\u3044\\u3082\\u306E\\u304C\\u4F7F\\u7528\\u3055\\u308C\\u306A\\u3044\\u307E\\u307E\\u5909\\u6570\\u304C\\u518D\\u4EE3\\u5165\\u3055\\u308C\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Variable is reassigned a value before the old one has been used. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"shadowVariable (\\u30ED\\u30FC\\u30AB\\u30EB\\u5909\\u6570\\u304C\\u5916\\u306E\\u5909\\u6570\\u3092\\u96A0\\u3057\\u3066\\u3044\\u307E\\u3059(\\u540C\\u3058\\u540D\\u524D\\u3067\\u518D\\u5B9A\\u7FA9\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059))\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Local variable shadows outer variable \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"shadowArgument (\\u30ED\\u30FC\\u30AB\\u30EB\\u5909\\u6570\\u304C\\u5916\\u306E\\u5F15\\u6570\\u3092\\u96A0\\u3057\\u307E\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Local variable shadows outer argument \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"unreadVariable (\\u4F7F\\u7528\\u3055\\u308C\\u306A\\u3044\\u5024\\u304C\\u5909\\u6570\\u306B\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u3066\\u3044\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Variable is assigned a value that is never used. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"unsignedLessThanZero (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unsigned\"), \"\\u306E\\u5909\\u6570\\u306B\\u5BFE\\u3057\\u3066\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \"\\u4EE5\\u4E0B\\u306E\\u6761\\u4EF6\\u3092\\u30C1\\u30A7\\u30C3\\u30AF\\u3057\\u3066\\u3044\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Checking if unsigned expression 'counter' is less than zero. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"unusedVariable (\\u672A\\u4F7F\\u7528\\u306E\\u5909\\u6570\\u3067\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Unused variable: \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"variableScope (\\u5909\\u6570\\u306E\\u30B9\\u30B3\\u30FC\\u30D7\\u3092\\u72ED\\u3081\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: The scope of the variable can be reduced. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"virtualCallInConstructor (\\u4EEE\\u60F3\\u95A2\\u6570\\u304C\\u30C7\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u304B\\u3089\\u547C\\u3070\\u308C\\u307E\\u3059\\uFF0E\\u52D5\\u7684\\u675F\\u7E1B\\u306F\\u4F7F\\u308F\\u308C\\u307E\\u305B\\u3093\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"style: Virtual function is called from destructor at line. Dynamic binding is not used. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/eierapfel/items/ad607679a9c80e9516e0\"\n  }, \"\\u3053\\u3061\\u3089\\u306E\\u8A18\\u4E8B\"), \"\\u3092\\u53C2\\u8003\\u306B\\u3059\\u308B\\u3068\\uFF0C\\u30C7\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u3067\\u4EEE\\u60F3\\u95A2\\u6570\\u3092\\u547C\\u3073\\u51FA\\u3057\\u3066\\u3057\\u307E\\u3046\\u3068\\uFF0C\\u3053\\u306E\\u30AF\\u30E9\\u30B9\\u3092\\u7D99\\u627F\\u3057\\u305F\\u30AF\\u30E9\\u30B9\\u306E\\u30C7\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u304B\\u3089\\u3082\\u547C\\u3073\\u51FA\\u3055\\u308C\\u3066\\u3057\\u307E\\u3046\\u3053\\u3068\\u306B\\u306A\\u308B\\u305D\\u3046\\u3067\\u3059\\uFF0E\")))), mdx(\"h2\", null, \"Performance\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"passedByValue (\\u95A2\\u6570\\u5F15\\u6570\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"const\"), \"\\u53C2\\u7167\\u3067\\u6E21\\u3055\\u308C\\u308B\\u3079\\u304D\\u3067\\u3059\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"performance: Function parameter should be passed by const reference. \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\system\\\\RenderMonitor.h:29\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void setInfo(string info)\\n{\\n    if (_re && !info.empty()) {\\n    _re->i.infostr = info.c_str();\\n    _re->stats_draw(_re->sdh, &_re->i);\\n    _re->i.infostr = NULL;\\n    }\\n}\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"postfixOperator (\\u975E\\u30D7\\u30EA\\u30DF\\u30C6\\u30A3\\u30D6\\u578B\\u3067\\u306Fprefix ++/-- (\\u524D\\u7F6E\\u304D\\u306E\\u30A4\\u30F3\\u30AF\\u30EA\\u30E1\\u30F3\\u30C8\\uFF0C\\u30C7\\u30AF\\u30EA\\u30E1\\u30F3\\u30C8)\\u3092\\u512A\\u5148\\u3057\\u307E\\u3059)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"performance: Prefer prefix ++/-- operators for non-primitive types. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://qiita.com/tommy6073/items/bc5bb97e27c6ee7d633f\"\n  }, \"\\u3053\\u3061\\u3089\\u306E\\u8A18\\u4E8B\"), \"\\u306B\\u3088\\u308B\\u3068\\uFF0C\\u5F8C\\u7F6E\\u304D\\u306E\\u6F14\\u7B97\\u5B50\\u3060\\u3068\\uFF0C\\u5909\\u66F4\\u524D\\u306E\\u30B3\\u30D4\\u30FC\\u306B\\u3088\\u308B\\u51E6\\u7406\\u306E\\u8FFD\\u52A0\\u304C\\u767A\\u751F\\u3059\\u308B\\u3089\\u3057\\u3044\\u3067\\u3059\\uFF0E\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\geometry\\\\Grid.h:352\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"        for (OccludersSet::iterator it = occluders.begin(); it != occluders.end(); it++) {\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"stlFindInsert (\\u633F\\u5165\\u524D\\u306E\\u691C\\u7D22\\u306F\\u5FC5\\u8981\\u3042\\u308A\\u307E\\u305B\\u3093\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"performance: Searching before insertion is not necessary. \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\winged_edge\\\\Curvature.cpp:96\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"        if (vertices.find(w) == vertices.end()) {\\n            vertices.insert(w);\\n            S.push(w);\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"useInitializationList (\\u5909\\u6570\\u304C\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\\u5185\\u3067\\u5272\\u308A\\u5F53\\u3066\\u3089\\u308C\\u3066\\u3044\\u307E\\u3059\\uFF0E\\u521D\\u671F\\u5316\\u30EA\\u30B9\\u30C8\\u3067\\u521D\\u671F\\u5316\\u3059\\u308B\\u3053\\u3068\\u3092\\u8003\\u616E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\uFF0E)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"performance: Variable '_strokes' is assigned in constructor body. Consider performing initialization in initialization list. \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F8B: source\\\\blender\\\\freestyle\\\\intern\\\\stroke\\\\StrokeLayer.h:34\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"StrokeLayer(const stroke_container &iStrokes)\\n{\\n    _strokes = iStrokes;\\n}\\n\")))))), mdx(\"h2\", null, \"\\u305D\\u306E\\u4ED6\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"missingInclude (include\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\uFF0E(\\u30B5\\u30D6\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3067\\u3042\\u308B\\u305F\\u3081\\u51FA\\u529B\\u3055\\u308C\\u307E\\u3059\\uFF0E))\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) \")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#error","title":"Error"},{"url":"#warning","title":"Warning"},{"url":"#style","title":"Style"},{"url":"#performance","title":"Performance"},{"url":"#その他","title":"その他"}]},"parent":{"relativePath":"frs_cleanup/04-cppcheck_all_options.md"},"frontmatter":{"metaTitle":"Freestyle Cleanup 04","metaDescription":"cppcheck --enable=all"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/blender_ime","title":"BlenderとIMEについて"}}},{"node":{"fields":{"slug":"/introduction","title":"このブログについて"}}},{"node":{"fields":{"slug":"/frs_cleanup","title":"Freestyle Cleanup"}}},{"node":{"fields":{"slug":"/frs_reading","title":"Freestyle Reading Code"}}},{"node":{"fields":{"slug":"/misc","title":"その他のメモ"}}},{"node":{"fields":{"slug":"/","title":"このブログについて"}}},{"node":{"fields":{"slug":"/snippet","title":"スニペット"}}},{"node":{"fields":{"slug":"/setup","title":"ブログ設定"}}},{"node":{"fields":{"slug":"/blender_ime/01-check_ime_area","title":"エリアごとのIMEの有効/無効"}}},{"node":{"fields":{"slug":"/blender_ime/04-text_object","title":"テキストオブジェクトのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/02-texteditor","title":"テキストエディタのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/03-console","title":"Python コンソールのIME入力実装"}}},{"node":{"fields":{"slug":"/frs_cleanup/01-delete_path","title":"Pathに関連するファイルの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/02-delete_if0","title":"#if 0 ディレクティブの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/04-cppcheck_all_options","title":"cppcheckの全オプションを有効にして確認する"}}},{"node":{"fields":{"slug":"/frs_cleanup/05-compute_steerable_view_map","title":"SteerableViewMapを計算する部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/03-delete_unused_function","title":"cppcheckを使用した未使用関数の削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/07-viewmapbuilder","title":"ViewMapBulder.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/06-visibility_algo","title":"VisibilityAlgoのうち使用されていない部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/08-grid","title":"Grid.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/09-wfillgrid_wsfillgrid","title":"WFillGrid.cpp/h, WSFillGrid.cpp/hを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/12-delete_empty_files","title":"何も書かれていないファイルを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/10-delete_unused_function_manually","title":"その他の未使用の関数を調べる．"}}},{"node":{"fields":{"slug":"/frs_cleanup/13-delete_unused_files_manually","title":"未使用のファイルを調べて削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/11-restore_visibility_alog_in_dna","title":"削除したDNA内のVisibilityAlgoのEnumを元に戻す(コミット修正)"}}},{"node":{"fields":{"slug":"/frs_reading/02-loadmesh","title":"メッシュの読み込み"}}},{"node":{"fields":{"slug":"/frs_reading/01-frs_freestyle","title":"FRS_freestyle.hを読む"}}},{"node":{"fields":{"slug":"/frs_reading/03-computeviewmap","title":"viewマップの構築"}}},{"node":{"fields":{"slug":"/frs_reading/04-winged_edge","title":"Winged Edge データ構造について"}}},{"node":{"fields":{"slug":"/frs_reading/05-indexed_face_set","title":"Indexed Face Setについて"}}}]}},"pageContext":{"id":"27ecbf64-088d-52b3-9c24-91edddab2909"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}
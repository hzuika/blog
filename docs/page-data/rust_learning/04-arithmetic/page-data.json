{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/rust_learning/04-arithmetic",
    "result": {"data":{"site":{"siteMetadata":{"title":"blog | hzuika","docsLocation":"https://github.com/hzuika/blog/tree/master/content"}},"mdx":{"fields":{"id":"71efa1f8-3485-5a74-a122-24237fda0b02","title":"Rustの演算子オーバーロード(四則演算)","slug":"/rust_learning/04-arithmetic"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rustの演算子オーバーロード(四則演算)\",\n  \"metaTitle\": \"Learning Rust 04\",\n  \"metaDescription\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Rust\\u306E\\u6F14\\u7B97\\u5B50\\u30AA\\u30FC\\u30D0\\u30FC\\u30ED\\u30FC\\u30C9\"), mdx(\"p\", null, \"\\u56DB\\u5247\\u6F14\\u7B97(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"+-/*\"), \")\\u306E\\u30AA\\u30FC\\u30D0\\u30FC\\u30ED\\u30FC\\u30C9\\u3092\\u884C\\u3044\\u307E\\u3059\\uFF0E\\n\\u30D7\\u30EA\\u30DF\\u30C6\\u30A3\\u30D6\\u578B\\u306E\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u5024(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \")\\u3067\\u521D\\u671F\\u5316\\u3055\\u308C\\u305F\\u5909\\u6570\\u3092\\u7528\\u610F\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u3063\\u305F\\u305F\\u3081\\uFF0C\\u69CB\\u9020\\u4F53\\u306E\\u5B9A\\u7FA9\\u306E\\u524D\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[derive(Default)]\"), \"\\u3092\\u52A0\\u3048\\u307E\\u3059\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rs\"\n  }, \"+#[derive(Default)]\\npub struct Float3 {\\n    pub x: f32,\\n    pub y: f32,\\n    pub z: f32,\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std::ops::Add\"), \" \\u30C8\\u30EC\\u30A4\\u30C8\\u306E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"add\"), \" \\u30E1\\u30BD\\u30C3\\u30C9\\u3092\\u5B9F\\u88C5\\u3057\\u307E\\u3059\\uFF0E\\n\\u3053\\u3053\\u3067\\u306F\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Self\"), \" \\u578B\\u304C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&Float3\"), \" \\u306B\\u306A\\u308A\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Self::Output\"), \" \\u578B\\u304C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Float3\"), \" \\u306B\\u306A\\u308A\\u307E\\u3059\\uFF0E\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std::ops::Sub\"), \" \\u30C8\\u30EC\\u30A4\\u30C8\\u306E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sub\"), \" \\u30E1\\u30BD\\u30C3\\u30C9\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std::ops::Mul\"), \" \\u30C8\\u30EC\\u30A4\\u30C8\\u306E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mul\"), \" \\u30E1\\u30BD\\u30C3\\u30C9\\u3082\\u540C\\u69D8\\u306B\\u5B9F\\u88C5\\u3057\\u307E\\u3059\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rs\"\n  }, \"impl std::ops::Add for &Float3 {\\n    type Output = Float3;\\n    fn add(self, other: Self) -> Self::Output {\\n        let mut _result = Self::Output::default();\\n        for i in 0..3 {\\n            _result[i] = self[i] + other[i];\\n        }\\n        _result\\n    }\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std::ops::Div\"), \" \\u30C8\\u30EC\\u30A4\\u30C8\\u306E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" \\u30E1\\u30BD\\u30C3\\u30C9\\u306F \\u30BC\\u30ED\\u9664\\u7B97\\u304C\\u8D77\\u304D\\u306A\\u3044\\u3088\\u3046\\u306B\\u4E8B\\u524D\\u306B\\u30C1\\u30A7\\u30C3\\u30AF\\u3057\\u307E\\u3059\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rs\"\n  }, \"impl std::ops::Div for &Float3 {\\n    type Output = Float3;\\n    fn div(self, other: Self) -> Self::Output {\\n        for i in 0..3 {\\n            assert_ne!(other[i], 0.0);\\n        }\\n        let mut _result = Self::Output::default();\\n        for i in 0..3 {\\n            _result[i] = self[i] / other[i];\\n        }\\n        _result\\n    }\\n}\\n\")), mdx(\"h1\", null, \"\\u5FC5\\u305A\\u5931\\u6557\\u3059\\u308B\\u30C6\\u30B9\\u30C8\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rs\"\n  }, \"#[cfg(test)]\\nmod tests {\\n    use crate::*;\\n\\n    #[test]\\n    #[should_panic] // \\u5FC5\\u305A\\u5931\\u6557\\u3059\\u308B\\u304B\\u3069\\u3046\\u304B\\u30C6\\u30B9\\u30C8\\u3057\\u307E\\u3059\\uFF0E\\n    fn test_div_zero() {\\n        let a = Float3 {\\n            x: 8.0,\\n            y: 15.0,\\n            z: 24.0,\\n        };\\n        let b = Float3 {\\n            x: 4.0,\\n            y: 0.0, // \\u30BC\\u30ED\\u9664\\u7B97\\u304C\\u8D77\\u3053\\u308B\\u3088\\u3046\\u306B\\u3057\\u307E\\u3059\\uFF0E\\n            z: 6.0,\\n        };\\n        let _ = &a / &b;\\n    }\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#rustの演算子オーバーロード","title":"Rustの演算子オーバーロード"},{"url":"#必ず失敗するテスト","title":"必ず失敗するテスト"}]},"parent":{"relativePath":"rust_learning/04-arithmetic.md"},"frontmatter":{"metaTitle":"Learning Rust 04","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/frs_cleanup","title":"Freestyle Cleanup"}}},{"node":{"fields":{"slug":"/","title":"このブログについて"}}},{"node":{"fields":{"slug":"/blender_ime","title":"BlenderとIMEについて"}}},{"node":{"fields":{"slug":"/rust_learning","title":"Rustの学習"}}},{"node":{"fields":{"slug":"/misc","title":"その他のメモ"}}},{"node":{"fields":{"slug":"/frs_reading","title":"Freestyle Reading Code"}}},{"node":{"fields":{"slug":"/introduction","title":"このブログについて"}}},{"node":{"fields":{"slug":"/blender_ime/03-console","title":"Python コンソールのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/02-texteditor","title":"テキストエディタのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/04-text_object","title":"テキストオブジェクトのIME入力実装"}}},{"node":{"fields":{"slug":"/rust_learning/01-struct","title":"Rustの構造体とテストコード"}}},{"node":{"fields":{"slug":"/rust_learning/03-index","title":"Rustの演算子オーバーロード(インデックス)"}}},{"node":{"fields":{"slug":"/rust_learning/04-arithmetic","title":"Rustの演算子オーバーロード(四則演算)"}}},{"node":{"fields":{"slug":"/blender_ime/01-check_ime_area","title":"エリアごとのIMEの有効/無効"}}},{"node":{"fields":{"slug":"/snippet","title":"スニペット"}}},{"node":{"fields":{"slug":"/frs_cleanup/01-delete_path","title":"Pathに関連するファイルの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/04-cppcheck_all_options","title":"cppcheckの全オプションを有効にして確認する"}}},{"node":{"fields":{"slug":"/frs_cleanup/05-compute_steerable_view_map","title":"SteerableViewMapを計算する部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/02-delete_if0","title":"#if 0 ディレクティブの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/07-viewmapbuilder","title":"ViewMapBulder.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/09-wfillgrid_wsfillgrid","title":"WFillGrid.cpp/h, WSFillGrid.cpp/hを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/06-visibility_algo","title":"VisibilityAlgoのうち使用されていない部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/11-restore_visibility_alog_in_dna","title":"削除したDNA内のVisibilityAlgoのEnumを元に戻す(コミット修正)"}}},{"node":{"fields":{"slug":"/frs_cleanup/03-delete_unused_function","title":"cppcheckを使用した未使用関数の削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/10-delete_unused_function_manually","title":"その他の未使用の関数を調べる．"}}},{"node":{"fields":{"slug":"/frs_reading/01-frs_freestyle","title":"FRS_freestyle.hを読む"}}},{"node":{"fields":{"slug":"/frs_cleanup/12-delete_empty_files","title":"何も書かれていないファイルを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/13-delete_unused_files_manually","title":"未使用のファイルを調べて削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/08-grid","title":"Grid.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_reading/03-computeviewmap","title":"viewマップの構築"}}},{"node":{"fields":{"slug":"/frs_reading/05-indexed_face_set","title":"Indexed Face Setについて"}}},{"node":{"fields":{"slug":"/frs_reading/02-loadmesh","title":"メッシュの読み込み"}}},{"node":{"fields":{"slug":"/frs_reading/04-winged_edge","title":"Winged Edge データ構造について"}}},{"node":{"fields":{"slug":"/rust_learning/02-function","title":"Rustの関数"}}},{"node":{"fields":{"slug":"/setup","title":"ブログ設定"}}},{"node":{"fields":{"slug":"/rust_learning/05-partialeq","title":"Rustの比較"}}},{"node":{"fields":{"slug":"/rust_learning/06-constructor","title":"Rustのコンストラクタ(new スタティックメソッド)"}}}]}},"pageContext":{"id":"71efa1f8-3485-5a74-a122-24237fda0b02"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}
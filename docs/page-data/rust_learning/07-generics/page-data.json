{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/rust_learning/07-generics",
    "result": {"data":{"site":{"siteMetadata":{"title":"blog | hzuika","docsLocation":"https://github.com/hzuika/blog/tree/master/content"}},"mdx":{"fields":{"id":"cec9145b-0730-5992-bf17-bd9e182667a8","title":"Rustのジェネリクス","slug":"/rust_learning/07-generics"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rustのジェネリクス\",\n  \"metaTitle\": \"Learning Rust 07\",\n  \"metaDescription\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Float3\"), \" \\u69CB\\u9020\\u4F53\\u304B\\u3089\\u578B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T\"), \"\\u306E\\u30B8\\u30A7\\u30CD\\u30EA\\u30AF\\u30B9\\u3092\\u4F7F\\u7528\\u3057\\u305F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"VecBase3<T>\"), \"\\u69CB\\u9020\\u4F53\\u306B\\u7F6E\\u304D\\u63DB\\u3048\\u307E\\u3059\\uFF0E\"), mdx(\"h1\", null, \"\\u5B9A\\u7FA9\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[derive(Default, Debug, PartialEq)]\\npub struct VecBase3<T> {\\n    pub x: T,\\n    pub y: T,\\n    pub z: T,\\n}\\n\\ntype Float3 = VecBase3<f32>;\\n\")), mdx(\"h1\", null, \"\\u30B3\\u30F3\\u30B9\\u30C8\\u30E9\\u30AF\\u30BF\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T> VecBase3<T> {\\n    pub fn new(x: T, y: T, z: T) -> Self {\\n        Self { x, y, z }\\n    }\\n}\\n\")), mdx(\"h1\", null, \"\\u30B9\\u30E9\\u30A4\\u30B9\\u3078\\u306E\\u5909\\u63DB\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T> VecBase3<T> {\\n    fn as_slice(&self) -> &[T] {\\n        unsafe { std::slice::from_raw_parts(self as *const Self as *const T, 3) }\\n    }\\n\\n    fn as_slice_mut(&mut self) -> &mut [T] {\\n        unsafe { std::slice::from_raw_parts_mut(self as *mut Self as *mut T, 3) }\\n    }\\n}\\n\")), mdx(\"h1\", null, \"\\u30A4\\u30F3\\u30C7\\u30C3\\u30AF\\u30B9\\u6F14\\u7B97\\u5B50\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T> Index<usize> for VecBase3<T> {\\n    type Output = T;\\n    fn index(&self, index: usize) -> &Self::Output {\\n        &self.as_slice()[index]\\n    }\\n}\\n\\nimpl<T> IndexMut<usize> for VecBase3<T> {\\n    fn index_mut(&mut self, index: usize) -> &mut Self::Output {\\n        &mut self.as_slice_mut()[index]\\n    }\\n}\\n\")), mdx(\"h1\", null, \"\\u30B8\\u30A7\\u30CD\\u30EA\\u30C3\\u30AF\\u5883\\u754C\"), mdx(\"h2\", null, \"Neg \\u6F14\\u7B97\\u5B50 (\\u5358\\u9805\\u6F14\\u7B97\\u5B50 - )\"), mdx(\"p\", null, \"\\u56DB\\u5247\\u6F14\\u7B97\\u306E\\u30AA\\u30FC\\u30D0\\u30FC\\u30ED\\u30FC\\u30C9\\u306F\\u30B8\\u30A7\\u30CD\\u30EA\\u30C3\\u30AF\\u3092\\u305D\\u306E\\u307E\\u307E\\u9069\\u7528\\u3059\\u308B\\u3053\\u3068\\u306F\\u3067\\u304D\\u306A\\u3044\\uFF0E\\n\\u5358\\u9805\\u6F14\\u7B97\\u5B50\\u306E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Neg\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \")\\u306E\\u5834\\u5408\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \" \\u304C\\u547C\\u3079\\u306A\\u3044\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"let mut _result = Self::Output::default();\\n                                ^^^^^^^ function or associated item cannot be called on `VecBase3<T>` due to unsatisfied trait bounds\\n\")), mdx(\"p\", null, \"\\u69CB\\u9020\\u4F53\\u306E\\u521D\\u671F\\u5316\\u306B\\u5909\\u66F4\\u3059\\u308B\\uFF0E\\n(\\u3053\\u308C\\u307E\\u3067\\u306F\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \"\\u3067\\u521D\\u671F\\u5316\\u3057\\u305F\\u5F8C\\uFF0Cfor\\u6587\\u3067\\u5404\\u5024\\u3092\\u5909\\u66F4\\u3057\\u3066\\u3044\\u305F\\u304C\\uFF0CRust\\u3067\\u306FC++\\u306E\\u3088\\u3046\\u306A\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u306E\\u7279\\u6B8A\\u5316\\u304C\\u3067\\u304D\\u306A\\u3044\\uFF0E\\u4E8C\\u6B21\\u5143\\uFF0C\\u56DB\\u6B21\\u5143\\u30D9\\u30AF\\u30C8\\u30EB\\u306E\\u5B9F\\u88C5\\u3082\\u9069\\u5B9C\\u540C\\u3058\\u3088\\u3046\\u306B\\u66F8\\u3044\\u3066\\u3044\\u304F\\u3053\\u3068\\u306B\\u3059\\u308B\\uFF0E)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"        Self::Output {\\n            x: -self.x,\\n            y: -self.y,\\n            z: -self.z,\\n        }\\n\")), mdx(\"p\", null, \"\\u4ECA\\u5EA6\\u306F\\uFF0C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T\"), \" \\u578B\\u306B\\u5358\\u9805\\u6F14\\u7B97\\u5B50 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \" \\u3092\\u9069\\u7528\\u3067\\u304D\\u306A\\u3044\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"81 |             x: -self.x,\\n   |                ^^^^^^^ cannot apply unary operator `-`\\nerror[E0600]: cannot apply unary operator `-` to type `T`\\n\")), mdx(\"p\", null, \"\\u578B\\u306B\\u30B8\\u30A7\\u30CD\\u30EA\\u30C3\\u30AF\\u5883\\u754C\\u3092\\u52A0\\u3048\\u308B\\uFF0E\\u3053\\u308C\\u3067 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T\"), \" \\u578B\\u306F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Neg\"), \" \\u304C\\u5B9F\\u88C5\\u3055\\u308C\\u3066\\u3044\\u308B\\u3082\\u306E\\u306B\\u9650\\u5B9A\\u3055\\u308C\\u308B\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T: Neg<Output = T>> Neg for &VecBase3<T> {\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Copy\"), \" \\u30C8\\u30EC\\u30A4\\u30C8\\u304C\\u5B9F\\u88C5\\u3055\\u308C\\u3066\\u3044\\u306A\\u3044\\u305F\\u3081\\uFF0C\\u30A8\\u30E9\\u30FC\\u306B\\u306A\\u308B\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"error[E0507]: cannot move out of `self.x` which is behind a shared reference\\n  --> src\\\\lib.rs:81:17\\n   |\\n81 |             x: -self.x,\\n   |                 ^^^^^^ move occurs because `self.x` has type `T`, which does not implement the `Copy` trait\\n\")), mdx(\"p\", null, \"\\u3053\\u308C\\u3067\\uFF0C\\u4E0A\\u624B\\u304F\\u3044\\u304F\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T: Neg<Output = T> + Copy> Neg for &VecBase3<T> {\\n    type Output = VecBase3<T>;\\n    fn neg(self) -> Self::Output {\\n        Self::Output {\\n            x: -self.x,\\n            y: -self.y,\\n            z: -self.z,\\n        }\\n    }\\n}\\n\")), mdx(\"h2\", null, \"Add \\u6F14\\u7B97\\u5B50\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Neg\"), \" \\u6F14\\u7B97\\u5B50\\u3068\\u540C\\u69D8\\u306B\\uFF0C\\u30B8\\u30A7\\u30CD\\u30EA\\u30C3\\u30AF\\u5883\\u754C\\u3092\\u8A2D\\u5B9A\\u3059\\u308B\\uFF0E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T: Add<Output = T> + Copy> Add for &VecBase3<T> {\\n    type Output = VecBase3<T>;\\n    fn add(self, other: Self) -> Self::Output {\\n        Self::Output {\\n            x: self.x + other.x,\\n            y: self.y + other.y,\\n            z: self.z + other.z,\\n        }\\n    }\\n}\\n\")), mdx(\"h2\", null, \"\\u30DE\\u30AF\\u30ED\\u3092\\u4F7F\\u3046\"), mdx(\"p\", null, \"\\u56DB\\u5247\\u6F14\\u7B97\\u306F\\u5168\\u3066\\u4F3C\\u305F\\u3088\\u3046\\u306A\\u51E6\\u7406\\u3092\\u884C\\u3046\\u305F\\u3081\\uFF0C\\u30DE\\u30AF\\u30ED\\u3092\\u4F7F\\u3044\\u305F\\u3044\\uFF0E\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#定義","title":"定義"},{"url":"#コンストラクタ","title":"コンストラクタ"},{"url":"#スライスへの変換","title":"スライスへの変換"},{"url":"#インデックス演算子","title":"インデックス演算子"},{"url":"#ジェネリック境界","title":"ジェネリック境界","items":[{"url":"#neg-演算子-単項演算子---","title":"Neg 演算子 (単項演算子 - )"},{"url":"#add-演算子","title":"Add 演算子"},{"url":"#マクロを使う","title":"マクロを使う"}]}]},"parent":{"relativePath":"rust_learning/07-generics.md"},"frontmatter":{"metaTitle":"Learning Rust 07","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/frs_cleanup","title":"Freestyle Cleanup"}}},{"node":{"fields":{"slug":"/blender_ime","title":"BlenderとIMEについて"}}},{"node":{"fields":{"slug":"/gatsby_learning","title":"Gatsbyの学習"}}},{"node":{"fields":{"slug":"/introduction","title":"このブログについて"}}},{"node":{"fields":{"slug":"/frs_reading","title":"Freestyle Reading Code"}}},{"node":{"fields":{"slug":"/misc","title":"その他のメモ"}}},{"node":{"fields":{"slug":"/","title":"このブログについて"}}},{"node":{"fields":{"slug":"/rust_learning","title":"Rustの学習"}}},{"node":{"fields":{"slug":"/snippet","title":"スニペット"}}},{"node":{"fields":{"slug":"/blender_ime/01-check_ime_area","title":"エリアごとのIMEの有効/無効"}}},{"node":{"fields":{"slug":"/blender_ime/02-texteditor","title":"テキストエディタのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/03-console","title":"Python コンソールのIME入力実装"}}},{"node":{"fields":{"slug":"/blender_ime/04-text_object","title":"テキストオブジェクトのIME入力実装"}}},{"node":{"fields":{"slug":"/frs_cleanup/01-delete_path","title":"Pathに関連するファイルの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/03-delete_unused_function","title":"cppcheckを使用した未使用関数の削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/02-delete_if0","title":"#if 0 ディレクティブの削除"}}},{"node":{"fields":{"slug":"/frs_cleanup/04-cppcheck_all_options","title":"cppcheckの全オプションを有効にして確認する"}}},{"node":{"fields":{"slug":"/frs_cleanup/05-compute_steerable_view_map","title":"SteerableViewMapを計算する部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/06-visibility_algo","title":"VisibilityAlgoのうち使用されていない部分を削除する"}}},{"node":{"fields":{"slug":"/frs_cleanup/07-viewmapbuilder","title":"ViewMapBulder.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/08-grid","title":"Grid.cpp/hで使用されていない関数を削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/09-wfillgrid_wsfillgrid","title":"WFillGrid.cpp/h, WSFillGrid.cpp/hを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/10-delete_unused_function_manually","title":"その他の未使用の関数を調べる．"}}},{"node":{"fields":{"slug":"/frs_cleanup/11-restore_visibility_alog_in_dna","title":"削除したDNA内のVisibilityAlgoのEnumを元に戻す(コミット修正)"}}},{"node":{"fields":{"slug":"/frs_cleanup/12-delete_empty_files","title":"何も書かれていないファイルを削除する．"}}},{"node":{"fields":{"slug":"/frs_cleanup/13-delete_unused_files_manually","title":"未使用のファイルを調べて削除する．"}}},{"node":{"fields":{"slug":"/frs_reading/02-loadmesh","title":"メッシュの読み込み"}}},{"node":{"fields":{"slug":"/frs_reading/01-frs_freestyle","title":"FRS_freestyle.hを読む"}}},{"node":{"fields":{"slug":"/frs_reading/03-computeviewmap","title":"viewマップの構築"}}},{"node":{"fields":{"slug":"/frs_reading/04-winged_edge","title":"Winged Edge データ構造について"}}},{"node":{"fields":{"slug":"/frs_reading/05-indexed_face_set","title":"Indexed Face Setについて"}}},{"node":{"fields":{"slug":"/gatsby_learning/01-tutorial","title":"Gatsbyのチュートリアルで学ぶ"}}},{"node":{"fields":{"slug":"/rust_learning/07-generics","title":"Rustのジェネリクス"}}},{"node":{"fields":{"slug":"/rust_learning/06-constructor","title":"Rustのコンストラクタ(new スタティックメソッド)"}}},{"node":{"fields":{"slug":"/rust_learning/01-struct","title":"Rustの構造体とテストコード"}}},{"node":{"fields":{"slug":"/rust_learning/04-arithmetic","title":"Rustの演算子オーバーロード(四則演算)"}}},{"node":{"fields":{"slug":"/rust_learning/05-partialeq","title":"Rustの比較"}}},{"node":{"fields":{"slug":"/rust_learning/02-function","title":"Rustの関数"}}},{"node":{"fields":{"slug":"/rust_learning/08-macro","title":"Rustのマクロ"}}},{"node":{"fields":{"slug":"/rust_learning/03-index","title":"Rustの演算子オーバーロード(インデックス)"}}},{"node":{"fields":{"slug":"/setup","title":"ブログ設定"}}},{"node":{"fields":{"slug":"/gatsby_learning/02-highlight","title":"シンタックスハイライト"}}}]}},"pageContext":{"id":"cec9145b-0730-5992-bf17-bd9e182667a8"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}